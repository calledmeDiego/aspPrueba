@using SustentacionASPNETCoreMVC.Data;
@model Paginacion<Usuario>;

<h1>Listado de Usuario</h1>

<p>
    <a asp-action="Create">
        Crear
    </a>
</p>

<form asp-controller="Usuario" asp-action="Index">
    <p>
        Buscar: <input type="text" name="buscar" value="@ViewData["FiltroActual"]" class="form-text" />
        <input type="submit" value="Buscar" class="btn btn-dark" />
    </p>
</form>

<a asp-action="Index" class="btn btn-outline-info">Lista Completa</a>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-ordenActual="@ViewData["FiltroNombre"]" asp-route-filtroActual="@ViewData["FiltroActual"]">
                    Nombre
                </a>

            </th>
            <th>
                Username
            </th>
            <th>
                Password
            </th>
            <th>
                Área
            </th>
            <th>
                Fecha Registro
            </th>
            <th>
                Acciones
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var area in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(m => area.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(m => area.UserName)
                </td>
                <td>
                    @{
                        var passwordLength = area.PasswordUser.Length; // Obtener la longitud de la contraseña
                    }

                    <input type="text" value="@(new string('*', passwordLength))" readonly class="form-control" />
                </td>
                <td>
                    @Html.DisplayFor(m=>area.OArea.NameArea)
                </td>
                <td>
                    @Html.DisplayFor(m=>area.FechaRegistro)
                </td>
                <td>


                    <a class="btn btn-primary btn-sm" asp-action="Create" asp-controller="Usuario" asp-route-idUsuario="@area.IdPerson">Editar</a>


                    <button class="btn btn-danger" data-target="#DeleteUserModal_@area.IdPerson" data-toggle="modal">
                        Delete
                    </button>
                    <div class="modal" id="DeleteUserModal_@area.IdPerson" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar eliminación</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>

                                <!-- Contenedor para cargar la vista parcial dinámicamente -->
                                <div class="modal-content-container">
                                    <!-- Renderiza la vista parcial aquí -->
                                @await Html.PartialAsync("/Views/Shared/_DeleteUser.cshtml",area)
                                </div>

                            </div>
                        </div>
                    </div>

                </td>


            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>
        $(document).ready(function () {
            // Captura el evento de apertura del modal
            
            $('#DeleteUser_IdUser').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Botón que abrió el modal
                var itemId = button.data('id'); // Extrae el ID del elemento del botón

                // Carga la vista parcial dinámicamente
                $('.modal-content-container').load('/Usuario/Delete/' + itemId);
            });
        });
                        // Espera a que el documento esté cargado

    </script>
}
@{
    var anteriorDeshabilitado = !Model.PaginasAnteriores ? "disabled" : "";
    var siguienteDeshabilitado = !Model.PaginasPosteriores ? "disabled" : "";
}

<div>
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                <a asp-action="Index" asp-route-ordenActual="@ViewData["OrdenActual"]" asp-route-numPag="@(Model.PaginaInicio - 1)"
                   asp-route-filtroActual="@ViewData["FiltroActual"]" class="btn btn-primary  page-link @anteriorDeshabilitado">
                    Anterior
                </a>
            </li>
            @for (var i = 1; i <= Model.PaginasTotales; i++)
            {
                var paginaActiva = (i == Model.PaginaInicio) ? "active" : "";
                <li class="page-item">
                    <a asp-action="Index" asp-route-ordenActual="@ViewData["OrdenActual"]" asp-route-numPag="@i"
                   asp-route-filtroActual="@ViewData["FiltroActual"]" class="btn btn-primary page-link @paginaActiva">
                        @i
                    </a>
                </li>
            }
            <li class="page-item">
                <a asp-action="Index" asp-route-ordenActual="@ViewData["OrdenActual"]" asp-route-numPag="@(Model.PaginaInicio + 1)"
                   asp-route-filtroActual="@ViewData["FiltroActual"]" class="btn btn-primary @siguienteDeshabilitado page-link">
                    Siguiente
                </a>
            </li>
        </ul>
    </nav>

</div>
<!-- Button trigger modal -->
<!-- Modal de confirmación -->
@*<script src="~/lib/jquery/dist/jquery.js"></script>*@

